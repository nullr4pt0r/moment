name: Build and Deploy to Azure VM

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Java (Maven)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Build the Spring Boot app using Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Set up SSH
      - name: Set up SSH
        uses: LuisEnMarroquin/setup-ssh-action@v2.0.0
        with:
          ORIGIN: ${{ github.workspace }}  # Source of the files
          SSHKEY: ${{ secrets.SSH_PRIVATE_KEY }}  # SSH private key
          PORT: ${{ secrets.SSH_PORT }}  # SSH port
          USER: ${{ secrets.SSH_USERNAME }}  # SSH username
          NAME: Set up SSH  # Optional name for the action

      # Copy files to the Azure VM
      - name: Copy files to Azure VM
        run: |
          scp -o StrictHostKeyChecking=no -P ${{ secrets.SSH_PORT }} -i ~/.ssh/id_rsa target/*.jar ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USERNAME }}/my-springboot-app/
          scp -o StrictHostKeyChecking=no -P ${{ secrets.SSH_PORT }} -i ~/.ssh/id_rsa Dockerfile ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USERNAME }}/my-springboot-app/

      # Deploy to Azure VM
      - name: Deploy to Azure VM
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} -i ~/.ssh/id_rsa ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            # Navigate to the app directory
            cd /home/${{ secrets.SSH_USERNAME }}/my-springboot-app

            # Stop and remove the existing container (if any)
            docker stop my-springboot-app || true
            docker rm my-springboot-app || true

            # Build the Docker image
            docker build -t my-springboot-app .

            # Run the new container with environment variables
            docker run -d \
              --name my-springboot-app \
              -p 9292:9292 \
              -e MONGO_CONNECTION=${{ secrets.MONGO_CONNECTION }} \
              -e REDIS_HOST=${{ secrets.REDIS_HOST }} \
              -e REDIS_KEY=${{ secrets.REDIS_KEY }} \
              my-springboot-app
          EOF