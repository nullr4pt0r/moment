name: CI/CD Pipeline for Moment App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-${{ runner.os }}-

      - name: Build JAR file with Maven
        run: mvn clean package -DskipTests

      - name: Log in to GitHub Container Registry (GHCR)
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/moment-app:latest .
          docker tag ghcr.io/${{ secrets.GHCR_USERNAME }}/moment-app:latest ghcr.io/${{ secrets.GHCR_USERNAME }}/moment-app:v1

      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/moment-app:latest
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/moment-app:v1

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Display SSH Key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh-keygen -l -f private_key.pem

      - name: Test SSH Connection
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} echo "SSH connection successful!"

      - name: Deploy to Azure VM
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Debug: Print the docker run command
            echo "Running command:"
            echo "docker run -d \
              --env MONGO_CONNECTION=\"${{ secrets.MONGO_CONNECTION }}\" \
              --env REDIS_HOST=\"${{ secrets.REDIS_HOST }}\" \
              --env REDIS_KEY=\"${{ secrets.REDIS_KEY }}\" \
              --env REDIS_PORT=\"${{ secrets.REDIS_PORT }}\" \
              -p 9292:9292 \
              --name moment-app \
              ghcr.io/${{ secrets.GHCR_USERNAME }}/moment-app:latest"

            # Stop and remove existing container
            docker stop moment-app || true
            docker rm moment-app || true

            # Log in to GHCR inside VM
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

            # Pull the latest image from GHCR
            docker pull ghcr.io/${{ secrets.GHCR_USERNAME }}/moment-app:latest

            echo "MONGO_CONNECTION: ${{ secrets.MONGO_CONNECTION }}"
            echo "REDIS_HOST: ${{ secrets.REDIS_HOST }}"
            echo "REDIS_KEY: ${{ secrets.REDIS_KEY }}"
            echo "REDIS_PORT: ${{ secrets.REDIS_PORT }}"

            # Run new container with environment variables
            docker run -d \
              --env MONGO_CONNECTION="${{ secrets.MONGO_CONNECTION }}" \
              --env REDIS_HOST="${{ secrets.REDIS_HOST }}" \
              --env REDIS_KEY="${{ secrets.REDIS_KEY }}" \
              --env REDIS_PORT="${{ secrets.REDIS_PORT }}" \
              -p 9292:9292 \
              --name moment-app \
              ghcr.io/${{ secrets.GHCR_USERNAME }}/moment-app:latest
